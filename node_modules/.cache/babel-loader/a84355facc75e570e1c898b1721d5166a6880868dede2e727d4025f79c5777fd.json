{"ast":null,"code":"var V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n    return script;\n  }\n  return null;\n};\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n  headOrBody.appendChild(script);\n  return script;\n};\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"3.1.0\",\n    startTime: startTime\n  });\n};\nvar stripePromise = null;\nvar onErrorListener = null;\nvar onLoadListener = null;\nvar onError = function onError(reject) {\n  return function () {\n    reject(new Error('Failed to load Stripe.js'));\n  };\n};\nvar onLoad = function onLoad(resolve, reject) {\n  return function () {\n    if (window.Stripe) {\n      resolve(window.Stripe);\n    } else {\n      reject(new Error('Stripe.js not available'));\n    }\n  };\n};\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n    try {\n      var script = findScript();\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      } else if (script && onLoadListener !== null && onErrorListener !== null) {\n        var _script$parentNode;\n\n        // remove event listeners\n        script.removeEventListener('load', onLoadListener);\n        script.removeEventListener('error', onErrorListener); // if script exists, but we are reloading due to an error,\n        // reload script to trigger 'load' event\n\n        (_script$parentNode = script.parentNode) === null || _script$parentNode === void 0 ? void 0 : _script$parentNode.removeChild(script);\n        script = injectScript(params);\n      }\n      onLoadListener = onLoad(resolve, reject);\n      onErrorListener = onError(reject);\n      script.addEventListener('load', onLoadListener);\n      script.addEventListener('error', onErrorListener);\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  }); // Resets stripePromise on error\n\n  return stripePromise[\"catch\"](function (error) {\n    stripePromise = null;\n    return Promise.reject(error);\n  });\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nvar stripePromise$1;\nvar loadCalled = false;\nvar getStripePromise = function getStripePromise() {\n  if (stripePromise$1) {\n    return stripePromise$1;\n  }\n  stripePromise$1 = loadScript(null)[\"catch\"](function (error) {\n    // clear cache on error\n    stripePromise$1 = null;\n    return Promise.reject(error);\n  });\n  return stripePromise$1;\n}; // Execute our own script injection after a tick to give users time to do their\n// own script injection.\n\nPromise.resolve().then(function () {\n  return getStripePromise();\n})[\"catch\"](function (error) {\n  if (!loadCalled) {\n    console.warn(error);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  loadCalled = true;\n  var startTime = Date.now(); // if previous attempts are unsuccessful, will re-load script\n\n  return getStripePromise().then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\nexport { loadStripe };","map":{"version":3,"names":["V3_URL","V3_URL_REGEX","EXISTING_SCRIPT_MESSAGE","findScript","scripts","document","querySelectorAll","concat","i","length","script","test","src","injectScript","params","queryString","advancedFraudSignals","createElement","headOrBody","head","body","Error","appendChild","registerWrapper","stripe","startTime","_registerWrapper","name","version","stripePromise","onErrorListener","onLoadListener","onError","reject","onLoad","resolve","window","Stripe","loadScript","Promise","console","warn","_script$parentNode","removeEventListener","parentNode","removeChild","addEventListener","error","initStripe","maybeStripe","args","apply","undefined","stripePromise$1","loadCalled","getStripePromise","then","loadStripe","_len","arguments","Array","_key","Date","now"],"sources":["C:/Users/User/Documents/GitHub/Group2/node_modules/@stripe/stripe-js/dist/index.mjs"],"sourcesContent":["var V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"3.1.0\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise = null;\nvar onErrorListener = null;\nvar onLoadListener = null;\n\nvar onError = function onError(reject) {\n  return function () {\n    reject(new Error('Failed to load Stripe.js'));\n  };\n};\n\nvar onLoad = function onLoad(resolve, reject) {\n  return function () {\n    if (window.Stripe) {\n      resolve(window.Stripe);\n    } else {\n      reject(new Error('Stripe.js not available'));\n    }\n  };\n};\n\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      } else if (script && onLoadListener !== null && onErrorListener !== null) {\n        var _script$parentNode;\n\n        // remove event listeners\n        script.removeEventListener('load', onLoadListener);\n        script.removeEventListener('error', onErrorListener); // if script exists, but we are reloading due to an error,\n        // reload script to trigger 'load' event\n\n        (_script$parentNode = script.parentNode) === null || _script$parentNode === void 0 ? void 0 : _script$parentNode.removeChild(script);\n        script = injectScript(params);\n      }\n\n      onLoadListener = onLoad(resolve, reject);\n      onErrorListener = onError(reject);\n      script.addEventListener('load', onLoadListener);\n      script.addEventListener('error', onErrorListener);\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  }); // Resets stripePromise on error\n\n  return stripePromise[\"catch\"](function (error) {\n    stripePromise = null;\n    return Promise.reject(error);\n  });\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nvar stripePromise$1;\nvar loadCalled = false;\n\nvar getStripePromise = function getStripePromise() {\n  if (stripePromise$1) {\n    return stripePromise$1;\n  }\n\n  stripePromise$1 = loadScript(null)[\"catch\"](function (error) {\n    // clear cache on error\n    stripePromise$1 = null;\n    return Promise.reject(error);\n  });\n  return stripePromise$1;\n}; // Execute our own script injection after a tick to give users time to do their\n// own script injection.\n\n\nPromise.resolve().then(function () {\n  return getStripePromise();\n})[\"catch\"](function (error) {\n  if (!loadCalled) {\n    console.warn(error);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  var startTime = Date.now(); // if previous attempts are unsuccessful, will re-load script\n\n  return getStripePromise().then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nexport { loadStripe };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}